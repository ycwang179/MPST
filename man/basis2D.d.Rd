% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basis2D.d.R
\name{basis2D.d}
\alias{basis2D.d}
\title{Basis Function Generator for Bivariate Spline over Triangulation}
\usage{
basis2D.d(V, Tr, d, r, Z)
}
\arguments{
\item{V}{The \code{nV} by two matrix of vertices of a triangle, where \code{nV} is the number of vertices. Each row is the coordinates for a vertex.
\cr}

\item{Tr}{The triangular partition matrix of dimension \code{nT} by three, where \code{nT} is the number of triangles in the partition. Each row is the indices of vertices in \code{V}.
\cr}

\item{d}{The degree of piecewise polynomials -- default is 9, and usually \code{d} is greater than one. -1 represents piecewise constant.
\cr}

\item{r}{The smoothness parameter -- default is 1, and 0 \eqn{\le} \code{r} \eqn{<} \code{d}.
\cr}

\item{Z}{The coordinates of dimension \code{n} by two. Each row is the 2D coordinates of a point.
\cr}
}
\value{
A list of vectors and matrices, including:
\item{B}{The spline basis function of dimension \code{n} by \code{nT}*\code{{(d+2)(d+1)/2}}, where \code{n} is the number of observed points, \code{nT} is the number of triangles in the given partition, and \code{d} is the degree of polynomials for the spline. If some points do not fall in the triangular partition, the generation of the spline basis will not take those points into consideration.}
\item{ind.inside}{A vector contains the indexes of all the points which are inside the triangulation.}
\item{ind.T}{A vector contains the indexes of the triangles each point falls in.}
}
\description{
Basis Function Generator for Bivariate Spline over Triangulation
}
\details{
This R program is modified based on the Matlab program written by Ming-Jun Lai from the University of Georgia.
}
\examples{
# example 1
d = 2; r = 1;
x1.o = seq(0.1, 0.9, by = 0.1)
x2.o = seq(0.1, 0.9, by = 0.1)
Z = expand.grid(x1.o, x2.o)
V <- matrix(rbind(c(0, 0), c(0, 1), c(1, 0), c(1, 1)), ncol = 2)
Tr <- matrix(rbind(c(1, 2, 3), c(2, 3, 4)), ncol = 3)
B.all = basis2D.d(V, Tr, d, r, Z)

# example 2
d = 3; r = 1;
x1.o = seq(0.1, 0.9, by = 0.2)
x2.o = seq(0.1, 0.9, by = 0.2)
Z = expand.grid(x1.o, x2.o)
V <- matrix(rbind(c(0, 0), c(0, 1), c(1, 0), c(1, 1), c(0.5, 0.5)), ncol = 2)
Tr <- matrix(rbind(c(1, 2, 5), c(2, 4, 5), c(4, 3, 5), c(3, 1, 5)), ncol = 3)
B.all = basis2D.d(V, Tr, d, r, Z)
}
